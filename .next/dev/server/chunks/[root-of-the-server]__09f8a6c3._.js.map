{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Montech.DESKTOP-HFD37TP/Desktop/life-crime-game/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: PrismaClient | undefined\r\n}\r\n\r\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Montech.DESKTOP-HFD37TP/Desktop/life-crime-game/app/api/cities/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { prisma } from '@/lib/prisma'\r\n\r\nexport async function GET() {\r\n  try {\r\n    // Remove auth check - cities should be public for registration\r\n    const cities = await prisma.city.findMany({\r\n      orderBy: { minLevel: 'asc' }\r\n    })\r\n\r\n    return NextResponse.json({ cities })\r\n  } catch (error) {\r\n    console.error('‚ùå GET /api/cities error:', error)\r\n    return NextResponse.json(\r\n      { error: 'Failed to fetch cities' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,+DAA+D;QAC/D,MAAM,SAAS,MAAM,6JAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxC,SAAS;gBAAE,UAAU;YAAM;QAC7B;QAEA,OAAO,mSAAY,CAAC,IAAI,CAAC;YAAE;QAAO;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,mSAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}