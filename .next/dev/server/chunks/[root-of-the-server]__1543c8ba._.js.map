{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Montech.DESKTOP-HFD37TP/Desktop/life-crime-game/lib/supabase/server.ts"],"sourcesContent":["// lib/supabase/server.ts\r\nimport { createServerClient } from '@supabase/ssr'\r\nimport { cookies } from 'next/headers'\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies()\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        getAll() {\r\n          return cookieStore.getAll()\r\n        },\r\n        setAll(cookiesToSet) {\r\n          try {\r\n            cookiesToSet.forEach(({ name, value, options }) =>\r\n              cookieStore.set(name, value, options)\r\n            )\r\n          } catch {\r\n            // Server Component\r\n          }\r\n        },\r\n      },\r\n    }\r\n  )\r\n}"],"names":[],"mappings":"AAAA,yBAAyB;;;;;AACzB;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,+RAAO;IAEjC,OAAO,IAAA,kVAAkB,sUAGvB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,mBAAmB;gBACrB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Montech.DESKTOP-HFD37TP/Desktop/life-crime-game/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: PrismaClient | undefined\r\n}\r\n\r\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Montech.DESKTOP-HFD37TP/Desktop/life-crime-game/app/api/character/upload-avatar/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { createClient } from '@/lib/supabase/server'\r\nimport { prisma } from '@/lib/prisma'\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const supabase = await createClient()\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\r\n    }\r\n\r\n    const formData = await request.formData()\r\n    const file = formData.get('avatar') as File\r\n\r\n    if (!file) {\r\n      return NextResponse.json({ error: 'No file provided' }, { status: 400 })\r\n    }\r\n\r\n    // Walidacja\r\n    const maxSize = 2 * 1024 * 1024 // 2MB\r\n    if (file.size > maxSize) {\r\n      return NextResponse.json({ error: 'File too large (max 2MB)' }, { status: 400 })\r\n    }\r\n\r\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/webp', 'image/gif']\r\n    if (!allowedTypes.includes(file.type)) {\r\n      return NextResponse.json({ error: 'Invalid file type' }, { status: 400 })\r\n    }\r\n\r\n    // Upload do Supabase Storage\r\n    const fileExt = file.name.split('.').pop()\r\n    const fileName = `${user.id}-${Date.now()}.${fileExt}`\r\n    const filePath = `avatars/${fileName}`\r\n\r\n    const { data: uploadData, error: uploadError } = await supabase.storage\r\n      .from('avatars')\r\n      .upload(filePath, file, {\r\n        contentType: file.type,\r\n        upsert: true\r\n      })\r\n\r\n    if (uploadError) {\r\n      console.error('Upload error:', uploadError)\r\n      return NextResponse.json({ error: 'Failed to upload file' }, { status: 500 })\r\n    }\r\n\r\n    // Get public URL\r\n    const { data: { publicUrl } } = supabase.storage\r\n      .from('avatars')\r\n      .getPublicUrl(filePath)\r\n\r\n    // Update character\r\n    await prisma.character.update({\r\n      where: { userId: user.id },\r\n      data: { \r\n        avatar: 'custom',\r\n        customAvatar: publicUrl \r\n      } as any\r\n    })\r\n\r\n    return NextResponse.json({ \r\n      success: true, \r\n      url: publicUrl \r\n    })\r\n  } catch (error) {\r\n    console.error('Upload avatar error:', error)\r\n    return NextResponse.json({ error: 'Failed to upload avatar' }, { status: 500 })\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,WAAW,MAAM,IAAA,+KAAY;QACnC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAEtD,IAAI,CAAC,MAAM;YACT,OAAO,mSAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,WAAW,MAAM,QAAQ,QAAQ;QACvC,MAAM,OAAO,SAAS,GAAG,CAAC;QAE1B,IAAI,CAAC,MAAM;YACT,OAAO,mSAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,YAAY;QACZ,MAAM,UAAU,IAAI,OAAO,KAAK,MAAM;;QACtC,IAAI,KAAK,IAAI,GAAG,SAAS;YACvB,OAAO,mSAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA2B,GAAG;gBAAE,QAAQ;YAAI;QAChF;QAEA,MAAM,eAAe;YAAC;YAAc;YAAa;YAAc;SAAY;QAC3E,IAAI,CAAC,aAAa,QAAQ,CAAC,KAAK,IAAI,GAAG;YACrC,OAAO,mSAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,6BAA6B;QAC7B,MAAM,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;QACxC,MAAM,WAAW,GAAG,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,SAAS;QACtD,MAAM,WAAW,CAAC,QAAQ,EAAE,UAAU;QAEtC,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,SAAS,OAAO,CACpE,IAAI,CAAC,WACL,MAAM,CAAC,UAAU,MAAM;YACtB,aAAa,KAAK,IAAI;YACtB,QAAQ;QACV;QAEF,IAAI,aAAa;YACf,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,OAAO,mSAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,iBAAiB;QACjB,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,GAAG,SAAS,OAAO,CAC7C,IAAI,CAAC,WACL,YAAY,CAAC;QAEhB,mBAAmB;QACnB,MAAM,6JAAM,CAAC,SAAS,CAAC,MAAM,CAAC;YAC5B,OAAO;gBAAE,QAAQ,KAAK,EAAE;YAAC;YACzB,MAAM;gBACJ,QAAQ;gBACR,cAAc;YAChB;QACF;QAEA,OAAO,mSAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,KAAK;QACP;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,mSAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF","debugId":null}}]
}