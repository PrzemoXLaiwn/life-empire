{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Montech.DESKTOP-HFD37TP/Desktop/life-crime-game/app/dashboard/travel/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { useCharacterStore } from '@/lib/character-store'\r\n\r\nexport default function TravelPage() {\r\n  const { character, fetchCharacter } = useCharacterStore()\r\n  const [citiesByCountry, setCitiesByCountry] = useState<Record<string, any[]>>({})\r\n  const [currentCity, setCurrentCity] = useState<any>(null)\r\n  const [hasDriverLicense, setHasDriverLicense] = useState(false)\r\n  const [hasCar, setHasCar] = useState(false)\r\n  const [hasPlane, setHasPlane] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isTraveling, setIsTraveling] = useState(false)\r\n  const [error, setError] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    loadDestinations()\r\n  }, [])\r\n\r\nconst loadDestinations = async () => {\r\n  try {\r\n    const response = await fetch('/api/travel')\r\n    if (response.ok) {\r\n      const data = await response.json()\r\n      \r\n      // Filter only cities in same country\r\n      const sameCountryCities: Record<string, any[]> = {}\r\n      \r\n      Object.entries(data.citiesByCountry).forEach(([country, cities]: [string, any]) => {\r\n        if (data.currentCity && country === data.currentCity.country) {\r\n          sameCountryCities[country] = cities\r\n        }\r\n      })\r\n      \r\n      setCitiesByCountry(sameCountryCities)\r\n      setCurrentCity(data.currentCity)\r\n      setHasDriverLicense(data.hasDriverLicense)\r\n      setHasCar(data.hasCar)\r\n      setHasPlane(data.hasPlane)\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load destinations:', error)\r\n  } finally {\r\n    setIsLoading(false)\r\n  }\r\n}\r\n\r\n  const handleTravel = async (cityId: string, cityName: string) => {\r\n    if (!confirm(`Travel to ${cityName}?`)) return\r\n\r\n    setIsTraveling(true)\r\n    setError('')\r\n\r\n    try {\r\n      const response = await fetch('/api/travel', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ cityId })\r\n      })\r\n\r\n      const data = await response.json()\r\n\r\n      if (response.ok) {\r\n        await fetchCharacter()\r\n        await loadDestinations()\r\n        alert(`Successfully traveled to ${cityName}!`)\r\n      } else {\r\n        setError(data.error || 'Failed to travel')\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to travel')\r\n      console.error('Travel error:', error)\r\n    } finally {\r\n      setIsTraveling(false)\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-2 border-solid border-[#5cb85c] border-r-transparent mb-4\"></div>\r\n          <p className=\"text-[#888] text-xs uppercase\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!character) return null\r\n\r\n  return (\r\n    <div className=\"space-y-4 max-w-7xl mx-auto fade-in\">\r\n      <h1 className=\"text-2xl font-bold text-[#fff] mb-6\">Travel</h1>\r\n\r\n      {error && (\r\n        <div className=\"ls-section\">\r\n          <div className=\"ls-section-content\">\r\n            <p className=\"text-danger text-sm\">{error}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Current Location & Assets */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div className=\"ls-section\">\r\n          <div className=\"ls-section-header\">Current Location</div>\r\n          <div className=\"ls-section-content\">\r\n            {currentCity ? (\r\n              <>\r\n                <div className=\"ls-info-row\">\r\n                  <span className=\"ls-info-label\">City:</span>\r\n                  <span className=\"ls-info-value\">{currentCity.name}</span>\r\n                </div>\r\n                <div className=\"ls-info-row\">\r\n                  <span className=\"ls-info-label\">Country:</span>\r\n                  <span className=\"ls-info-value\">{currentCity.country}</span>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <p className=\"text-[#888] text-sm\">No city selected</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"ls-section\">\r\n          <div className=\"ls-section-header\">Your Assets</div>\r\n          <div className=\"ls-section-content\">\r\n            <div className=\"ls-info-row\">\r\n              <span className=\"ls-info-label\">Driver's License:</span>\r\n              <span className={`ls-info-value ${hasDriverLicense ? 'text-success' : 'text-danger'}`}>\r\n                {hasDriverLicense ? '✓ Yes' : '✗ No'}\r\n              </span>\r\n            </div>\r\n            <div className=\"ls-info-row\">\r\n              <span className=\"ls-info-label\">Car:</span>\r\n              <span className={`ls-info-value ${hasCar ? 'text-success' : 'text-danger'}`}>\r\n                {hasCar ? '✓ Yes' : '✗ No'}\r\n              </span>\r\n            </div>\r\n            <div className=\"ls-info-row\">\r\n              <span className=\"ls-info-label\">Plane:</span>\r\n              <span className={`ls-info-value ${hasPlane ? 'text-success' : 'text-danger'}`}>\r\n                {hasPlane ? '✓ Yes' : '✗ No'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Destinations by Country */}\r\n      {Object.entries(citiesByCountry).map(([country, cities]) => (\r\n        <div key={country} className=\"ls-section\">\r\n          <div className=\"ls-section-header\">{country}</div>\r\n          <div className=\"ls-section-content\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {cities.map((city) => (\r\n                <div\r\n                  key={city.id}\r\n                  className={`ls-section ${city.isCurrentCity ? 'ring-2 ring-[#5cb85c]' : ''}`}\r\n                >\r\n                  <div className=\"ls-section-header flex items-center justify-between\">\r\n                    <span>{city.name}</span>\r\n                    {city.isCurrentCity && (\r\n                      <span className=\"text-[#5cb85c] text-xs\">(Current)</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"ls-section-content\">\r\n                    <p className=\"text-xs text-[#888] mb-3\">{city.description}</p>\r\n\r\n                    {/* Requirements */}\r\n                    <div className=\"mb-3 pb-3 border-b border-[#2a2a2a]\">\r\n                      <p className=\"text-[10px] font-bold text-[#888] uppercase mb-2\">Requirements:</p>\r\n                      <div className=\"space-y-1\">\r\n                        <p className=\"text-xs\">\r\n                          <span className=\"text-[#888]\">Level:</span>{' '}\r\n                          <span className={character.level >= city.requirements.level ? 'text-success' : 'text-danger'}>\r\n                            {city.requirements.level}\r\n                          </span>\r\n                        </p>\r\n                        {city.requirements.car && (\r\n                          <p className=\"text-xs\">\r\n                            <span className=\"text-[#888]\">Car:</span>{' '}\r\n                            <span className={hasCar ? 'text-success' : 'text-danger'}>\r\n                              {hasCar ? 'Yes' : 'Required'}\r\n                            </span>\r\n                          </p>\r\n                        )}\r\n                        {city.requirements.plane && (\r\n                          <p className=\"text-xs\">\r\n                            <span className=\"text-[#888]\">Plane:</span>{' '}\r\n                            <span className={hasPlane ? 'text-success' : 'text-danger'}>\r\n                              {hasPlane ? 'Yes' : 'Required'}\r\n                            </span>\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Travel Info */}\r\n                    {!city.isCurrentCity && (\r\n                      <div className=\"mb-3\">\r\n                        <div className=\"ls-info-row\">\r\n                          <span className=\"ls-info-label\">Cost:</span>\r\n                          <span className=\"ls-info-value text-warning\">\r\n                            ${city.travelCost.toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"ls-info-row\">\r\n                          <span className=\"ls-info-label\">Energy:</span>\r\n                          <span className=\"ls-info-value text-warning\">\r\n                            -{city.energyCost}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Action Button */}\r\n                    {!city.isCurrentCity && (\r\n                      <button\r\n                        onClick={() => handleTravel(city.id, city.name)}\r\n                        disabled={!city.canTravel || isTraveling}\r\n                        className=\"ls-btn ls-btn-primary w-full disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                      >\r\n                        {city.canTravel \r\n                          ? 'Travel'\r\n                          : city.blockedReason\r\n                        }\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}