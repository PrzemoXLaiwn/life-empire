{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Montech.DESKTOP-HFD37TP/Desktop/life-crime-game/lib/supabase/server.ts"],"sourcesContent":["// lib/supabase/server.ts\r\nimport { createServerClient } from '@supabase/ssr'\r\nimport { cookies } from 'next/headers'\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies()\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        getAll() {\r\n          return cookieStore.getAll()\r\n        },\r\n        setAll(cookiesToSet) {\r\n          try {\r\n            cookiesToSet.forEach(({ name, value, options }) =>\r\n              cookieStore.set(name, value, options)\r\n            )\r\n          } catch {\r\n            // Server Component\r\n          }\r\n        },\r\n      },\r\n    }\r\n  )\r\n}"],"names":[],"mappings":"AAAA,yBAAyB;;;;;AACzB;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,+RAAO;IAEjC,OAAO,IAAA,kVAAkB,sUAGvB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,mBAAmB;gBACrB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Montech.DESKTOP-HFD37TP/Desktop/life-crime-game/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: PrismaClient | undefined\r\n}\r\n\r\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Montech.DESKTOP-HFD37TP/Desktop/life-crime-game/app/api/character/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\r\nimport { createClient } from '@/lib/supabase/server'\r\nimport { prisma } from '@/lib/prisma'\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const supabase = await createClient()\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\r\n    }\r\n\r\n    const character = await prisma.character.findUnique({\r\n      where: { userId: user.id },\r\n      include: { city: true }\r\n    })\r\n\r\n    if (!character) {\r\n      return NextResponse.json({ character: null }, { status: 200 })\r\n    }\r\n\r\n    return NextResponse.json({ character })\r\n  } catch (error) {\r\n    console.error('❌ GET /api/character error:', error)\r\n    return NextResponse.json(\r\n      { error: 'Failed to fetch character' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const supabase = await createClient()\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\r\n    }\r\n\r\n    const body = await request.json()\r\n    const { cityId } = body\r\n\r\n    // Check if exists\r\n    const existing = await prisma.character.findUnique({\r\n      where: { userId: user.id },\r\n      include: { city: true }\r\n    })\r\n\r\n    if (existing) {\r\n      return NextResponse.json({ character: existing })\r\n    }\r\n\r\n    // Create with city\r\n    const character = await prisma.character.create({\r\n      data: {\r\n        userId: user.id,\r\n        cityId: cityId,\r\n        money: 1000,\r\n        energy: 100,\r\n        maxEnergy: 100,\r\n        health: 100,\r\n        maxHealth: 100,\r\n        level: 1,\r\n        xp: 0,\r\n        xpNeeded: 100,\r\n        age: 18,\r\n        ageInDays: 0,\r\n        reputation: 0,\r\n        rank: 1,\r\n        strength: 10,\r\n        defense: 10,\r\n        speed: 10,\r\n        dexterity: 10,\r\n        crimesCommitted: 0,\r\n        jailTime: 0,\r\n        criminalReputation: 0,\r\n        hasDriverLicense: false,\r\n        hasCar: false,\r\n        hasPlane: false,\r\n        lastEnergyRegen: new Date(),\r\n        lastHealthRegen: new Date(),\r\n        lastAgeIncrement: new Date(),\r\n      },\r\n      include: { city: true }\r\n    })\r\n\r\n    return NextResponse.json({ character }, { status: 201 })\r\n  } catch (error) {\r\n    console.error('❌ POST /api/character error:', error)\r\n    return NextResponse.json(\r\n      { error: 'Failed to create character' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}\r\n\r\nexport async function PATCH(request: NextRequest) {\r\n  try {\r\n    const supabase = await createClient()\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\r\n    }\r\n\r\n    const body = await request.json()\r\n    const { ...updates } = body\r\n\r\n    const character = await prisma.character.update({\r\n      where: { userId: user.id },\r\n      data: updates,\r\n      include: { city: true }\r\n    })\r\n\r\n    return NextResponse.json({ character })\r\n  } catch (error) {\r\n    console.error('❌ PATCH /api/character error:', error)\r\n    return NextResponse.json(\r\n      { error: 'Failed to update character' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}